<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.pro.provider.db.mapper.MessageConsumeMapper">
  <resultMap id="BaseResultMap" type="cn.com.pro.provider.db.model.MessageConsume">
    <id column="message_key" jdbcType="VARCHAR" property="messageKey" />
    <id column="consume_group" jdbcType="VARCHAR" property="consumeGroup" />
    <result column="producer_group" jdbcType="VARCHAR" property="producerGroup" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="is_allow_repeat" jdbcType="CHAR" property="isAllowRepeat" />
    <result column="repeat_count" jdbcType="INTEGER" property="repeatCount" />
    <result column="business_status" jdbcType="INTEGER" property="businessStatus" />
    <result column="last_consumed_remark" jdbcType="VARCHAR" property="lastConsumedRemark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.com.pro.provider.db.model.MessageConsume">
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_key, consume_group, producer_group, topic, tags, message_id, is_allow_repeat, 
    repeat_count, business_status, last_consumed_remark, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    context
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.com.pro.provider.db.model.MessageConsumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_message_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.com.pro.provider.db.model.MessageConsumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.com.pro.provider.db.model.MessageConsumeKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_message_consume
    where message_key = #{messageKey,jdbcType=VARCHAR}
      and consume_group = #{consumeGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.pro.provider.db.model.MessageConsumeKey">
    delete from t_message_consume
    where message_key = #{messageKey,jdbcType=VARCHAR}
      and consume_group = #{consumeGroup,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.pro.provider.db.model.MessageConsumeExample">
    delete from t_message_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.pro.provider.db.model.MessageConsume">
    insert into t_message_consume (message_key, consume_group, producer_group, 
      topic, tags, message_id, 
      is_allow_repeat, repeat_count, business_status, 
      last_consumed_remark, create_time, update_time, 
      context)
    values (#{messageKey,jdbcType=VARCHAR}, #{consumeGroup,jdbcType=VARCHAR}, #{producerGroup,jdbcType=VARCHAR}, 
      #{topic,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{messageId,jdbcType=VARCHAR}, 
      #{isAllowRepeat,jdbcType=CHAR}, #{repeatCount,jdbcType=INTEGER}, #{businessStatus,jdbcType=INTEGER}, 
      #{lastConsumedRemark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.pro.provider.db.model.MessageConsume">
    insert into t_message_consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageKey != null">
        message_key,
      </if>
      <if test="consumeGroup != null">
        consume_group,
      </if>
      <if test="producerGroup != null">
        producer_group,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="isAllowRepeat != null">
        is_allow_repeat,
      </if>
      <if test="repeatCount != null">
        repeat_count,
      </if>
      <if test="businessStatus != null">
        business_status,
      </if>
      <if test="lastConsumedRemark != null">
        last_consumed_remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="context != null">
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageKey != null">
        #{messageKey,jdbcType=VARCHAR},
      </if>
      <if test="consumeGroup != null">
        #{consumeGroup,jdbcType=VARCHAR},
      </if>
      <if test="producerGroup != null">
        #{producerGroup,jdbcType=VARCHAR},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="isAllowRepeat != null">
        #{isAllowRepeat,jdbcType=CHAR},
      </if>
      <if test="repeatCount != null">
        #{repeatCount,jdbcType=INTEGER},
      </if>
      <if test="businessStatus != null">
        #{businessStatus,jdbcType=INTEGER},
      </if>
      <if test="lastConsumedRemark != null">
        #{lastConsumedRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.pro.provider.db.model.MessageConsumeExample" resultType="java.lang.Long">
    select count(*) from t_message_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_message_consume
    <set>
      <if test="record.messageKey != null">
        message_key = #{record.messageKey,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeGroup != null">
        consume_group = #{record.consumeGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.producerGroup != null">
        producer_group = #{record.producerGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.topic != null">
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=VARCHAR},
      </if>
      <if test="record.isAllowRepeat != null">
        is_allow_repeat = #{record.isAllowRepeat,jdbcType=CHAR},
      </if>
      <if test="record.repeatCount != null">
        repeat_count = #{record.repeatCount,jdbcType=INTEGER},
      </if>
      <if test="record.businessStatus != null">
        business_status = #{record.businessStatus,jdbcType=INTEGER},
      </if>
      <if test="record.lastConsumedRemark != null">
        last_consumed_remark = #{record.lastConsumedRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_message_consume
    set message_key = #{record.messageKey,jdbcType=VARCHAR},
      consume_group = #{record.consumeGroup,jdbcType=VARCHAR},
      producer_group = #{record.producerGroup,jdbcType=VARCHAR},
      topic = #{record.topic,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      message_id = #{record.messageId,jdbcType=VARCHAR},
      is_allow_repeat = #{record.isAllowRepeat,jdbcType=CHAR},
      repeat_count = #{record.repeatCount,jdbcType=INTEGER},
      business_status = #{record.businessStatus,jdbcType=INTEGER},
      last_consumed_remark = #{record.lastConsumedRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_message_consume
    set message_key = #{record.messageKey,jdbcType=VARCHAR},
      consume_group = #{record.consumeGroup,jdbcType=VARCHAR},
      producer_group = #{record.producerGroup,jdbcType=VARCHAR},
      topic = #{record.topic,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      message_id = #{record.messageId,jdbcType=VARCHAR},
      is_allow_repeat = #{record.isAllowRepeat,jdbcType=CHAR},
      repeat_count = #{record.repeatCount,jdbcType=INTEGER},
      business_status = #{record.businessStatus,jdbcType=INTEGER},
      last_consumed_remark = #{record.lastConsumedRemark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.pro.provider.db.model.MessageConsume">
    update t_message_consume
    <set>
      <if test="producerGroup != null">
        producer_group = #{producerGroup,jdbcType=VARCHAR},
      </if>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="isAllowRepeat != null">
        is_allow_repeat = #{isAllowRepeat,jdbcType=CHAR},
      </if>
      <if test="repeatCount != null">
        repeat_count = #{repeatCount,jdbcType=INTEGER},
      </if>
      <if test="businessStatus != null">
        business_status = #{businessStatus,jdbcType=INTEGER},
      </if>
      <if test="lastConsumedRemark != null">
        last_consumed_remark = #{lastConsumedRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_key = #{messageKey,jdbcType=VARCHAR}
      and consume_group = #{consumeGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.pro.provider.db.model.MessageConsume">
    update t_message_consume
    set producer_group = #{producerGroup,jdbcType=VARCHAR},
      topic = #{topic,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      message_id = #{messageId,jdbcType=VARCHAR},
      is_allow_repeat = #{isAllowRepeat,jdbcType=CHAR},
      repeat_count = #{repeatCount,jdbcType=INTEGER},
      business_status = #{businessStatus,jdbcType=INTEGER},
      last_consumed_remark = #{lastConsumedRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      context = #{context,jdbcType=LONGVARCHAR}
    where message_key = #{messageKey,jdbcType=VARCHAR}
      and consume_group = #{consumeGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.pro.provider.db.model.MessageConsume">
    update t_message_consume
    set producer_group = #{producerGroup,jdbcType=VARCHAR},
      topic = #{topic,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      message_id = #{messageId,jdbcType=VARCHAR},
      is_allow_repeat = #{isAllowRepeat,jdbcType=CHAR},
      repeat_count = #{repeatCount,jdbcType=INTEGER},
      business_status = #{businessStatus,jdbcType=INTEGER},
      last_consumed_remark = #{lastConsumedRemark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where message_key = #{messageKey,jdbcType=VARCHAR}
      and consume_group = #{consumeGroup,jdbcType=VARCHAR}
  </update>
</mapper>